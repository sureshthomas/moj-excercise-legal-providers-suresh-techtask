/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10.2/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id "java"

    // Apply the application plugin to add support for building an application
    id "application"
    // id 'com.gradle.build-scan' version '2.0.2'
    id "com.gradle.build-scan" version '1.16'
    id "org.springframework.boot" version '2.0.5.RELEASE'
    id "io.spring.dependency-management" version '1.0.7.RELEASE'
}

// Define the main class for the application

def entryPointClass = 'uk.gov.justice.digital.legaladviser.App'

mainClassName = entryPointClass

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile "com.google.guava:guava:23.0"
    compile fileTree(dir: 'resources', include: ['legal-providers.csv'])

    //This is for loading csv file provided as the part of exercise

    // compile 'com.fasterxml.jackson.dataformat:2.5.3'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    //Spring boot
    implementation 'org.springframework.boot:spring-boot-dependencies:2.0.5.RELEASE'
    //Minimal spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //Test driven development
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    // Need to patch constraints because snakeyaml is an optional dependency
                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                }
            }
        }
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // I usse jcenter for resolving your dependencies.
    // Alternately  I can declare any Maven/Ivy/file repository here.
    jcenter()
}
buildScan {

    // always accept the terms of service
    termsOfServiceUrl = "https://gradle.com/terms-of-service"
    termsOfServiceAgree = "yes"

    // always publish a build scan
    publishAlways()
}

bootJar {
    mainClassName = entryPointClass
}